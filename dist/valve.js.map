{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap cefbd785f38016ad08d3","webpack:///./src/views/leaflet.adapter.ts","webpack:///./src/index.ts","webpack:///./src/valve.ts","webpack:///./src/layer.ts","webpack:///./src/cartoLayerGroup.ts","webpack:///./src/client.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;AC7DA;AACA,qFAA2C;;;;;;;;;;;;;;;;;ACD3C;AACA;AACA;AACA;AACA;AACQ;AACR;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,KAAK;AAC9C;AACA;AAAA;AAAA;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;ACxBA;AAC2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,6EAA6E,kBAAkB,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE;AAC7G;AACA;AACA;AACA,CAAC;AACD;AACA,2BAA2B,SAAS;AACpC","file":"valve.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"carto\"] = factory();\n\telse\n\t\troot[\"carto\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cefbd785f38016ad08d3","\"use strict\";\nexport default window.L.TileLayer.extend({});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/leaflet.adapter.ts\n// module id = 0\n// module chunks = 0","\"use strict\";\nimport Valve from '../src/valve';\nimport Layer from '../src/layer';\nimport CartoLayerGroup from '../src/cartoLayerGroup';\nimport LeafletAdapter from '../src/views/leaflet.adapter';\nexport { Valve, Layer, CartoLayerGroup, LeafletAdapter };\nexport default {\n    Valve,\n    Layer,\n    CartoLayerGroup,\n    LeafletAdapter\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/index.ts\n// module id = 1\n// module chunks = 0","\"use strict\";\n/**\n *\n */\nexport default class Valve {\n    constructor(username, apiKey, serverUrl) {\n        this._username = username;\n        this._apiKey = apiKey;\n        this._serverUrl = serverUrl;\n    }\n    get url() {\n        return this._serverUrl.replace('{user}', this._username) + '/api/v1/map';\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/valve.ts\n// module id = 2\n// module chunks = 0","\"use strict\";\n/**\n *\n */\nexport default class Layer {\n    constructor(source, style) {\n        this._source = source;\n        this._style = style;\n    }\n    setStyle(style) {\n        this._style = style;\n        var event = new CustomEvent('map:load');\n        dispatchEvent(event);\n    }\n    toJSON() {\n        return {\n            type: \"cartodb\",\n            options: {\n                sql: this._source,\n                cartocss: this._style,\n                cartocss_version: \"2.1.1\"\n            }\n        };\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/layer.ts\n// module id = 3\n// module chunks = 0","\"use strict\";\nimport { getGroupLayerUrl } from './client';\nimport LeafletAdapter from './views/leaflet.adapter';\n/**\n * Main Class for doing foo.\n */\nexport default class CartoLayerGroup {\n    /**\n     * Class constructor\n     * @param valve The valve to do something\n     * @param layers The list with the Layers grouped in the layerGroup\n     *\n     * @example\n     *\n     * ```javascript\n     *\n     *  let cartoLayerGroup = new CartoLayerGroup(valve, layers);\n     *  foo = var;\n     * ```\n     */\n    constructor(valve, layers) {\n        this._valve = valve;\n        this._layers = layers;\n        addEventListener('map:load', this.onMapReloaded.bind(this));\n    }\n    get url() {\n        return this._url;\n    }\n    setUrl(url) {\n        this._url = url;\n        return this;\n    }\n    async load() {\n        // Currently response is only a url.\n        let response = await getGroupLayerUrl(this._layers, this._valve.url);\n        return this._update(response);\n    }\n    getView(type) {\n        this._view = new LeafletAdapter(this._url);\n        return this._view;\n    }\n    async onMapReloaded() {\n        await this.load();\n        if (this._view) {\n            this._view.setUrl(this._url);\n        }\n    }\n    /**\n     * @private\n     * @param response\n     */\n    _update(response) {\n        this.setUrl(response);\n        return this;\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/cartoLayerGroup.ts\n// module id = 4\n// module chunks = 0","\"use strict\";\nexport function getGroupLayerUrl(layers, apiUrl) {\n    return fetch(apiUrl, {\n        method: 'POST',\n        headers: HEADERS,\n        body: _buildBody(layers),\n    })\n        .then(data => data.json())\n        .then(data => `https://ashbu.cartocdn.com/documentation/api/v1/map/${data.layergroupid}/0/{z}/{x}/{y}.png`);\n}\nconst HEADERS = new Headers({\n    'Content-Type': 'application/json'\n});\nfunction _buildBody(layers) {\n    return JSON.stringify({ layers });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/client.ts\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}